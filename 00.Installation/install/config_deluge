#!/bin/bash
#
# https://github.com/Aniverse/inexistence
# Author: Aniverse
#
S_update=2019.02.15
S_version=1.0.1

OutputLOG=/etc/inexistence/01.Log/config_deluge.txt    # /dev/null
SCLocation=/etc/inexistence/01.Log/SourceCodes
LOCKLocation=/etc/inexistence/01.Log/Lock

# Colors
black=$(tput setaf 0); red=$(tput setaf 1); green=$(tput setaf 2); yellow=$(tput setaf 3); blue=$(tput setaf 4); magenta=$(tput setaf 5); cyan=$(tput setaf 6); white=$(tput setaf 7);
on_red=$(tput setab 1); on_green=$(tput setab 2); on_yellow=$(tput setab 3); on_blue=$(tput setab 4); on_magenta=$(tput setab 5); on_cyan=$(tput setab 6); on_white=$(tput setab 7); bold=$(tput bold);
dim=$(tput dim); underline=$(tput smul); reset_underline=$(tput rmul); standout=$(tput smso); reset_standout=$(tput rmso); normal=$(tput sgr0); alert=${white}${on_red}; title=${standout};
baihuangse=${white}${on_yellow}; bailanse=${white}${on_blue}; bailvse=${white}${on_green}; baiqingse=${white}${on_cyan}; baihongse=${white}${on_red}; baizise=${white}${on_magenta};
heibaise=${black}${on_white}; heihuangse=${on_yellow}${black}; jiacu=${normal}${bold}; shanshuo=$(tput blink); wuguangbiao=$(tput civis); guangbiao=$(tput cnorm)
CW="${bold}${baihongse} ERROR ${jiacu}";ZY="${baihongse}${bold} ATTENTION ${jiacu}";JG="${baihongse}${bold} WARNING ${jiacu}"

# Sustem check
DISTRO=$( awk -F'[= "]' '/PRETTY_NAME/{print $3}' /etc/os-release )
CODENAME=$( cat /etc/os-release | grep VERSION= | tr '[A-Z]' '[a-z]' | sed 's/\"\|(\|)\|[0-9.,]\|version\|lts//g' | awk '{print $2}' )

function version_ge(){ test "$(echo "$@" | tr " " "\n" | sort -rV | head -n 1)" == "$1" ; }

function _check_status() {
local LockName=$1
[[   -f /tmp/$LockName.1.lock ]] && echo -e " ${green}${bold}DONE${normal}"
[[   -f /tmp/$LockName.2.lock ]] && echo -e " ${red}${bold}FAILED${normal}"
[[ ! -f /tmp/$LockName.1.lock ]] && [[ ! -f /tmp/$LockName.2.lock ]] && echo -e " ${red}${bold}Unknown State${normal}" ; }

# Don't know why [ && Success=Yes || Success=No ] doesn't work，so use lock file instead
rm -f /tmp/de.1.lock /tmp/de.2.lock





OPTS=$(getopt -n "$0" -o m:v:b: --long "user:,version:,branch:" -- "$@")

eval set -- "$OPTS"

while true; do
  case "$1" in
    -u | --user         ) user="$2"       ; shift ; shift ;;
    -p | --password     ) password="$2"   ; shift ; shift ;;
    -d | --dport        ) dport="$2"      ; shift ; shift ;;
    -w | --wport        ) wport="$2"      ; shift ; shift ;;
    -h | --home         ) userhome="$2"   ; shift ; shift ;;
     * ) break ;;
  esac
done



User_PATH=/root
User_PATH=/home/$ANUSER



# Deluge Password Calculatation
cat >/tmp/deluge.userpass.py<<EOF
#!/usr/bin/env python
import hashlib
import sys
password = sys.argv[1]
salt = sys.argv[2]
s = hashlib.sha1()
s.update(salt)
s.update(password)
print s.hexdigest()
EOF

# Deluge Hostlist ID Generator
cat >/tmp/deluge.addhost.py<<EOF
#!/usr/bin/env python
import hashlib
import sys
import time
print hashlib.sha1(str(time.time())).hexdigest()
EOF

DWSALT=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -1)
DWP=$(python /tmp/deluge.userpass.py ${ANPASS} ${DWSALT})
DUDID=$(python /tmp/deluge.addhost.py)





function _setde() {

# [[ -d $User_PATH/.config/deluge ]] && rm -rf /home/${ANUSER}/.config/deluge.old && mv /home/${ANUSER}/.config/deluge $User_PATH/.config/deluge.old
mkdir -p $User_PATH/deluge/{download,torrent,watch}

chmod -R 777 $User_PATH/deluge
chown -R ${ANUSER}:${ANUSER} $User_PATH/deluge

touch /etc/inexistence/01.Log/deluged.log /etc/inexistence/01.Log/delugeweb.log
chmod -R 666 /etc/inexistence/01.Log

# mkdir -p /home/${ANUSER}/.config  && cd /home/${ANUSER}/.config && rm -rf deluge
# cp -f -r "${local_packages}"/template/config/deluge /home/${ANUSER}/.config
mkdir -p $User_PATH/.config && cd $User_PATH/.config
[[ -d $User_PATH/.config/deluge ]] && { rm -rf $User_PATH/.config/deluge.old ; mv $User_PATH/.config/deluge $User_PATH/.config/deluge.old ; }
cp -f "${local_packages}"/template/config/deluge.config.tar.gz $User_PATH/.config/deluge.config.tar.gz
tar zxf deluge.config.tar.gz
chmod -R 666 $User_PATH/.config
rm -rf deluge.config.tar.gz ; cd


echo "$ANUSER:$ANPASS:10" >> $User_PATH/.config/deluge/auth
sed -i "s/delugeuser/${ANUSER}/g" $User_PATH/.config/deluge/core.conf
sed -i "s/DWSALT/${DWSALT}/g" $User_PATH/.config/deluge/web.conf
sed -i "s/DWP/${DWP}/g" $User_PATH/.config/deluge/web.conf

cp -f "${local_packages}"/template/systemd/deluged.service /etc/systemd/system/deluged.service
cp -f "${local_packages}"/template/systemd/deluge-web.service /etc/systemd/system/deluge-web.service
[[ $Deluge_2_later == Yes ]] && sed -i "s/deluge-web -l/deluge-web -d -l/" /etc/systemd/system/deluge-web.service
# cp -f "${local_packages}"/template/systemd/deluged@.service /etc/systemd/system/deluged@.service
# cp -f "${local_packages}"/template/systemd/deluge-web@.service /etc/systemd/system/deluge-web@.service

systemctl daemon-reload
systemctl enable /etc/systemd/system/deluge-web.service
systemctl enable /etc/systemd/system/deluged.service
systemctl start deluged
systemctl start deluge-web
# systemctl enable {deluged,deluge-web}@${ANUSER}
# systemctl start {deluged,deluge-web}@${ANUSER}

# Deluge update-tracker，用于 AutoDL-Irssi
deluged_ver_2=`deluged --version | grep deluged | awk '{print $2}'`
deluged_port=$( grep daemon_port $User_PATH/.config/deluge/core.conf | grep -oP "\d+" )

cp "${local_packages}"/script/special/update-tracker.py /usr/lib/python2.7/dist-packages/deluge-$deluged_ver_2-py2.7.egg/deluge/ui/console/commands/update-tracker.py
sed -i "s/ANUSER/$ANUSER/g" /usr/local/bin/deluge-update-tracker
sed -i "s/ANPASS/$ANPASS/g" /usr/local/bin/deluge-update-tracker
sed -i "s/DAEMONPORT/$deluged_port/g" /usr/local/bin/deluge-update-tracker
chmod +x /usr/lib/python2.7/dist-packages/deluge-$deluged_ver_2-py2.7.egg/deluge/ui/console/commands/update-tracker.py /usr/local/bin/deluge-update-tracker

touch /etc/inexistence/01.Log/lock/deluge.lock ; }

















































case $mode in
    apt     ) sleep 0  ;;
    ppa     ) sleep 0  ;;
    source  ) sleep 0  ;;
    alt     ) sleep 0  ;;
    ""   | *) echo -e "\n${CW} Installation mode must be specified as apt, ppa, source or alt${normal}\n"   ;;
esac











function () {
 ; }



function () {
 ; }



function () {
 ; }




function () {
 ; }




mkdir -p $SCLocation $LOCKLocation
cd       $SCLocation
echo "\n\n\n$(date "+%Y.%m.%d.%H.%M.%S")   $RN\n\n\n" >> $OutputLOG

case $mode in
    apt     ) echo -ne "Installing deluge ${bold}${cyan}$version${normal} from repository ..."       | tee -a $OutputLOG ; _install_de_apt & spinner $!
              ;;

    ppa     ) echo -ne "Installing deluge ${bold}${cyan}$latest_stable${normal} from stable ppa ..." | tee -a $OutputLOG ; _install_de_ppa & spinner $!
              ;;

    source  ) [[ ! -f $LOCKLocation/deluge.dependencies.lock ]] && {
              echo -ne "Installing deluge build dependencies ..." | tee -a $OutputLOG
              _install_de_dependencies & spinner $!
              _check_status ded ; }

              echo -ne "Installing deluge ${bold}${cyan}$version${normal} from source codes ..."     | tee -a $OutputLOG
              _install_de_source & spinner $!
              ;;

    alt     ) [[ ! -f $LOCKLocation/deluge.dependencies.lock ]] && {
              echo -ne "Installing deluge build dependencies ..." | tee -a $OutputLOG
              _install_de_dependencies & spinner $!
              _check_status ded ; }

              echo -ne "Installing another deluge ${bold}${cyan}$version${normal} from source codes ..." | tee -a $OutputLOG 
              _install_de_alt & spinner $!
              ;;
esac

cd
_check_status de
